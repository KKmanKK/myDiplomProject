// <auto-generated />
using System;
using DiplomStore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiplomStore.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiplomStore.Domain.Entity.Categories", b =>
                {
                    b.Property<int>("CategoriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriesId"), 1L, 1);

                    b.Property<bool?>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriesId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("DiplomStore.Domain.Entity.Titles", b =>
                {
                    b.Property<int>("TitlesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitlesId"), 1L, 1);

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isPopular")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitlesId");

                    b.ToTable("titles");
                });

            modelBuilder.Entity("DiplomStore.Domain.Entity.Tovars", b =>
                {
                    b.Property<int>("TovarsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TovarsId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<int>("TitlesId")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("filler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("hight")
                        .HasColumnType("int");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isValids")
                        .HasColumnType("bit");

                    b.Property<string>("materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("width")
                        .HasColumnType("int");

                    b.HasKey("TovarsId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TitlesId");

                    b.ToTable("tovars");
                });

            modelBuilder.Entity("DiplomStore.Domain.Entity.Tovars", b =>
                {
                    b.HasOne("DiplomStore.Domain.Entity.Categories", "category")
                        .WithMany("tovars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomStore.Domain.Entity.Titles", "titles")
                        .WithMany("tovars")
                        .HasForeignKey("TitlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("titles");
                });

            modelBuilder.Entity("DiplomStore.Domain.Entity.Categories", b =>
                {
                    b.Navigation("tovars");
                });

            modelBuilder.Entity("DiplomStore.Domain.Entity.Titles", b =>
                {
                    b.Navigation("tovars");
                });
#pragma warning restore 612, 618
        }
    }
}
